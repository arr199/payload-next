"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _validations = require("../../../../../fields/validations");
const _CodeEditor = require("../../../elements/CodeEditor");
const _Error = /*#__PURE__*/ _interop_require_default(require("../../Error"));
const _FieldDescription = /*#__PURE__*/ _interop_require_default(require("../../FieldDescription"));
const _Label = /*#__PURE__*/ _interop_require_default(require("../../Label"));
const _useField = /*#__PURE__*/ _interop_require_default(require("../../useField"));
const _withCondition = /*#__PURE__*/ _interop_require_default(require("../../withCondition"));
const _shared = require("../shared");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'json-field';
const JSONField = (props)=>{
    const { name, admin: { className, components: { Error, Label } = {}, condition, description, editorOptions, readOnly, style, width } = {}, label, path: pathFromProps, required, validate = _validations.json } = props;
    const ErrorComp = Error || _Error.default;
    const LabelComp = Label || _Label.default;
    const path = pathFromProps || name;
    const [stringValue, setStringValue] = (0, _react.useState)();
    const [jsonError, setJsonError] = (0, _react.useState)();
    const [hasLoadedValue, setHasLoadedValue] = (0, _react.useState)(false);
    const memoizedValidate = (0, _react.useCallback)((value, options)=>{
        return validate(value, {
            ...options,
            jsonError,
            required
        });
    }, [
        validate,
        required,
        jsonError
    ]);
    const { errorMessage, initialValue, setValue, showError, value } = (0, _useField.default)({
        condition,
        path,
        validate: memoizedValidate
    });
    const handleChange = (0, _react.useCallback)((val)=>{
        if (readOnly) return;
        console.log(val);
        setStringValue(val);
        try {
            setValue(JSON.parse(val));
            setJsonError(undefined);
        } catch (e) {
            setJsonError(e);
        }
    }, [
        readOnly,
        setValue,
        setStringValue
    ]);
    (0, _react.useEffect)(()=>{
        if (hasLoadedValue) return;
        setStringValue(JSON.stringify(value ? value : initialValue, null, 2));
        setHasLoadedValue(true);
    }, [
        initialValue,
        value
    ]);
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            _shared.fieldBaseClass,
            baseClass,
            className,
            showError && 'error',
            readOnly && 'read-only'
        ].filter(Boolean).join(' '),
        style: {
            ...style,
            width
        }
    }, /*#__PURE__*/ _react.default.createElement(ErrorComp, {
        message: errorMessage,
        showError: showError
    }), /*#__PURE__*/ _react.default.createElement(LabelComp, {
        htmlFor: `field-${path}`,
        label: label,
        required: required
    }), /*#__PURE__*/ _react.default.createElement(_CodeEditor.CodeEditor, {
        defaultLanguage: "json",
        onChange: handleChange,
        options: editorOptions,
        readOnly: readOnly,
        value: stringValue
    }), /*#__PURE__*/ _react.default.createElement(_FieldDescription.default, {
        description: description,
        path: path,
        value: value
    }));
};
const _default = (0, _withCondition.default)(JSONField);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL2ZpZWxkLXR5cGVzL0pTT04vaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi90eXBlcydcblxuaW1wb3J0IHsganNvbiB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2ZpZWxkcy92YWxpZGF0aW9ucydcbmltcG9ydCB7IENvZGVFZGl0b3IgfSBmcm9tICcuLi8uLi8uLi9lbGVtZW50cy9Db2RlRWRpdG9yJ1xuaW1wb3J0IERlZmF1bHRFcnJvciBmcm9tICcuLi8uLi9FcnJvcidcbmltcG9ydCBGaWVsZERlc2NyaXB0aW9uIGZyb20gJy4uLy4uL0ZpZWxkRGVzY3JpcHRpb24nXG5pbXBvcnQgRGVmYXVsdExhYmVsIGZyb20gJy4uLy4uL0xhYmVsJ1xuaW1wb3J0IHVzZUZpZWxkIGZyb20gJy4uLy4uL3VzZUZpZWxkJ1xuaW1wb3J0IHdpdGhDb25kaXRpb24gZnJvbSAnLi4vLi4vd2l0aENvbmRpdGlvbidcbmltcG9ydCB7IGZpZWxkQmFzZUNsYXNzIH0gZnJvbSAnLi4vc2hhcmVkJ1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5cbmNvbnN0IGJhc2VDbGFzcyA9ICdqc29uLWZpZWxkJ1xuXG5jb25zdCBKU09ORmllbGQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgbmFtZSxcbiAgICBhZG1pbjoge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY29tcG9uZW50czogeyBFcnJvciwgTGFiZWwgfSA9IHt9LFxuICAgICAgY29uZGl0aW9uLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBlZGl0b3JPcHRpb25zLFxuICAgICAgcmVhZE9ubHksXG4gICAgICBzdHlsZSxcbiAgICAgIHdpZHRoLFxuICAgIH0gPSB7fSxcbiAgICBsYWJlbCxcbiAgICBwYXRoOiBwYXRoRnJvbVByb3BzLFxuICAgIHJlcXVpcmVkLFxuICAgIHZhbGlkYXRlID0ganNvbixcbiAgfSA9IHByb3BzXG5cbiAgY29uc3QgRXJyb3JDb21wID0gRXJyb3IgfHwgRGVmYXVsdEVycm9yXG4gIGNvbnN0IExhYmVsQ29tcCA9IExhYmVsIHx8IERlZmF1bHRMYWJlbFxuXG4gIGNvbnN0IHBhdGggPSBwYXRoRnJvbVByb3BzIHx8IG5hbWVcbiAgY29uc3QgW3N0cmluZ1ZhbHVlLCBzZXRTdHJpbmdWYWx1ZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KClcbiAgY29uc3QgW2pzb25FcnJvciwgc2V0SnNvbkVycm9yXSA9IHVzZVN0YXRlPHN0cmluZz4oKVxuICBjb25zdCBbaGFzTG9hZGVkVmFsdWUsIHNldEhhc0xvYWRlZFZhbHVlXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIGNvbnN0IG1lbW9pemVkVmFsaWRhdGUgPSB1c2VDYWxsYmFjayhcbiAgICAodmFsdWUsIG9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiB2YWxpZGF0ZSh2YWx1ZSwgeyAuLi5vcHRpb25zLCBqc29uRXJyb3IsIHJlcXVpcmVkIH0pXG4gICAgfSxcbiAgICBbdmFsaWRhdGUsIHJlcXVpcmVkLCBqc29uRXJyb3JdLFxuICApXG5cbiAgY29uc3QgeyBlcnJvck1lc3NhZ2UsIGluaXRpYWxWYWx1ZSwgc2V0VmFsdWUsIHNob3dFcnJvciwgdmFsdWUgfSA9IHVzZUZpZWxkPHN0cmluZz4oe1xuICAgIGNvbmRpdGlvbixcbiAgICBwYXRoLFxuICAgIHZhbGlkYXRlOiBtZW1vaXplZFZhbGlkYXRlLFxuICB9KVxuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrKFxuICAgICh2YWwpID0+IHtcbiAgICAgIGlmIChyZWFkT25seSkgcmV0dXJuXG4gICAgICBjb25zb2xlLmxvZyh2YWwpXG4gICAgICBzZXRTdHJpbmdWYWx1ZSh2YWwpXG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHNldFZhbHVlKEpTT04ucGFyc2UodmFsKSlcbiAgICAgICAgc2V0SnNvbkVycm9yKHVuZGVmaW5lZClcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgc2V0SnNvbkVycm9yKGUpXG4gICAgICB9XG4gICAgfSxcbiAgICBbcmVhZE9ubHksIHNldFZhbHVlLCBzZXRTdHJpbmdWYWx1ZV0sXG4gIClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChoYXNMb2FkZWRWYWx1ZSkgcmV0dXJuXG4gICAgc2V0U3RyaW5nVmFsdWUoSlNPTi5zdHJpbmdpZnkodmFsdWUgPyB2YWx1ZSA6IGluaXRpYWxWYWx1ZSwgbnVsbCwgMikpXG4gICAgc2V0SGFzTG9hZGVkVmFsdWUodHJ1ZSlcbiAgfSwgW2luaXRpYWxWYWx1ZSwgdmFsdWVdKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtbXG4gICAgICAgIGZpZWxkQmFzZUNsYXNzLFxuICAgICAgICBiYXNlQ2xhc3MsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgc2hvd0Vycm9yICYmICdlcnJvcicsXG4gICAgICAgIHJlYWRPbmx5ICYmICdyZWFkLW9ubHknLFxuICAgICAgXVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5qb2luKCcgJyl9XG4gICAgICBzdHlsZT17e1xuICAgICAgICAuLi5zdHlsZSxcbiAgICAgICAgd2lkdGgsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxFcnJvckNvbXAgbWVzc2FnZT17ZXJyb3JNZXNzYWdlfSBzaG93RXJyb3I9e3Nob3dFcnJvcn0gLz5cbiAgICAgIDxMYWJlbENvbXAgaHRtbEZvcj17YGZpZWxkLSR7cGF0aH1gfSBsYWJlbD17bGFiZWx9IHJlcXVpcmVkPXtyZXF1aXJlZH0gLz5cbiAgICAgIDxDb2RlRWRpdG9yXG4gICAgICAgIGRlZmF1bHRMYW5ndWFnZT1cImpzb25cIlxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICBvcHRpb25zPXtlZGl0b3JPcHRpb25zfVxuICAgICAgICByZWFkT25seT17cmVhZE9ubHl9XG4gICAgICAgIHZhbHVlPXtzdHJpbmdWYWx1ZX1cbiAgICAgIC8+XG4gICAgICA8RmllbGREZXNjcmlwdGlvbiBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259IHBhdGg9e3BhdGh9IHZhbHVlPXt2YWx1ZX0gLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoQ29uZGl0aW9uKEpTT05GaWVsZClcbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJKU09ORmllbGQiLCJwcm9wcyIsIm5hbWUiLCJhZG1pbiIsImNsYXNzTmFtZSIsImNvbXBvbmVudHMiLCJFcnJvciIsIkxhYmVsIiwiY29uZGl0aW9uIiwiZGVzY3JpcHRpb24iLCJlZGl0b3JPcHRpb25zIiwicmVhZE9ubHkiLCJzdHlsZSIsIndpZHRoIiwibGFiZWwiLCJwYXRoIiwicGF0aEZyb21Qcm9wcyIsInJlcXVpcmVkIiwidmFsaWRhdGUiLCJqc29uIiwiRXJyb3JDb21wIiwiRGVmYXVsdEVycm9yIiwiTGFiZWxDb21wIiwiRGVmYXVsdExhYmVsIiwic3RyaW5nVmFsdWUiLCJzZXRTdHJpbmdWYWx1ZSIsInVzZVN0YXRlIiwianNvbkVycm9yIiwic2V0SnNvbkVycm9yIiwiaGFzTG9hZGVkVmFsdWUiLCJzZXRIYXNMb2FkZWRWYWx1ZSIsIm1lbW9pemVkVmFsaWRhdGUiLCJ1c2VDYWxsYmFjayIsInZhbHVlIiwib3B0aW9ucyIsImVycm9yTWVzc2FnZSIsImluaXRpYWxWYWx1ZSIsInNldFZhbHVlIiwic2hvd0Vycm9yIiwidXNlRmllbGQiLCJoYW5kbGVDaGFuZ2UiLCJ2YWwiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInBhcnNlIiwidW5kZWZpbmVkIiwiZSIsInVzZUVmZmVjdCIsInN0cmluZ2lmeSIsImRpdiIsImZpZWxkQmFzZUNsYXNzIiwiZmlsdGVyIiwiQm9vbGVhbiIsImpvaW4iLCJtZXNzYWdlIiwiaHRtbEZvciIsIkNvZGVFZGl0b3IiLCJkZWZhdWx0TGFuZ3VhZ2UiLCJvbkNoYW5nZSIsIkZpZWxkRGVzY3JpcHRpb24iLCJ3aXRoQ29uZGl0aW9uIl0sIm1hcHBpbmdzIjoiOzs7OytCQTRHQTs7O2VBQUE7OzsrREE1R3dEOzZCQUluQzs0QkFDTTs4REFDRjt5RUFDSTs4REFDSjtpRUFDSjtzRUFDSzt3QkFDSztRQUN4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRVAsTUFBTUEsWUFBWTtBQUVsQixNQUFNQyxZQUE2QixDQUFDQztJQUNsQyxNQUFNLEVBQ0pDLElBQUksRUFDSkMsT0FBTyxFQUNMQyxTQUFTLEVBQ1RDLFlBQVksRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFDakNDLFNBQVMsRUFDVEMsV0FBVyxFQUNYQyxhQUFhLEVBQ2JDLFFBQVEsRUFDUkMsS0FBSyxFQUNMQyxLQUFLLEVBQ04sR0FBRyxDQUFDLENBQUMsRUFDTkMsS0FBSyxFQUNMQyxNQUFNQyxhQUFhLEVBQ25CQyxRQUFRLEVBQ1JDLFdBQVdDLGlCQUFJLEVBQ2hCLEdBQUdsQjtJQUVKLE1BQU1tQixZQUFZZCxTQUFTZSxjQUFZO0lBQ3ZDLE1BQU1DLFlBQVlmLFNBQVNnQixjQUFZO0lBRXZDLE1BQU1SLE9BQU9DLGlCQUFpQmQ7SUFDOUIsTUFBTSxDQUFDc0IsYUFBYUMsZUFBZSxHQUFHQyxJQUFBQSxlQUFRO0lBQzlDLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHRixJQUFBQSxlQUFRO0lBQzFDLE1BQU0sQ0FBQ0csZ0JBQWdCQyxrQkFBa0IsR0FBR0osSUFBQUEsZUFBUSxFQUFDO0lBRXJELE1BQU1LLG1CQUFtQkMsSUFBQUEsa0JBQVcsRUFDbEMsQ0FBQ0MsT0FBT0M7UUFDTixPQUFPaEIsU0FBU2UsT0FBTztZQUFFLEdBQUdDLE9BQU87WUFBRVA7WUFBV1Y7UUFBUztJQUMzRCxHQUNBO1FBQUNDO1FBQVVEO1FBQVVVO0tBQVU7SUFHakMsTUFBTSxFQUFFUSxZQUFZLEVBQUVDLFlBQVksRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVMLEtBQUssRUFBRSxHQUFHTSxJQUFBQSxpQkFBUSxFQUFTO1FBQ2xGL0I7UUFDQU87UUFDQUcsVUFBVWE7SUFDWjtJQUVBLE1BQU1TLGVBQWVSLElBQUFBLGtCQUFXLEVBQzlCLENBQUNTO1FBQ0MsSUFBSTlCLFVBQVU7UUFDZCtCLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDWmhCLGVBQWVnQjtRQUVmLElBQUk7WUFDRkosU0FBU08sS0FBS0MsS0FBSyxDQUFDSjtZQUNwQmIsYUFBYWtCO1FBQ2YsRUFBRSxPQUFPQyxHQUFHO1lBQ1ZuQixhQUFhbUI7UUFDZjtJQUNGLEdBQ0E7UUFBQ3BDO1FBQVUwQjtRQUFVWjtLQUFlO0lBR3RDdUIsSUFBQUEsZ0JBQVMsRUFBQztRQUNSLElBQUluQixnQkFBZ0I7UUFDcEJKLGVBQWVtQixLQUFLSyxTQUFTLENBQUNoQixRQUFRQSxRQUFRRyxjQUFjLE1BQU07UUFDbEVOLGtCQUFrQjtJQUNwQixHQUFHO1FBQUNNO1FBQWNIO0tBQU07SUFFeEIscUJBQ0UsNkJBQUNpQjtRQUNDOUMsV0FBVztZQUNUK0Msc0JBQWM7WUFDZHBEO1lBQ0FLO1lBQ0FrQyxhQUFhO1lBQ2IzQixZQUFZO1NBQ2IsQ0FDRXlDLE1BQU0sQ0FBQ0MsU0FDUEMsSUFBSSxDQUFDO1FBQ1IxQyxPQUFPO1lBQ0wsR0FBR0EsS0FBSztZQUNSQztRQUNGO3FCQUVBLDZCQUFDTztRQUFVbUMsU0FBU3BCO1FBQWNHLFdBQVdBO3NCQUM3Qyw2QkFBQ2hCO1FBQVVrQyxTQUFTLENBQUMsTUFBTSxFQUFFekMsS0FBSyxDQUFDO1FBQUVELE9BQU9BO1FBQU9HLFVBQVVBO3NCQUM3RCw2QkFBQ3dDLHNCQUFVO1FBQ1RDLGlCQUFnQjtRQUNoQkMsVUFBVW5CO1FBQ1ZOLFNBQVN4QjtRQUNUQyxVQUFVQTtRQUNWc0IsT0FBT1Q7c0JBRVQsNkJBQUNvQyx5QkFBZ0I7UUFBQ25ELGFBQWFBO1FBQWFNLE1BQU1BO1FBQU1rQixPQUFPQTs7QUFHckU7TUFFQSxXQUFlNEIsSUFBQUEsc0JBQWEsRUFBQzdEIn0=